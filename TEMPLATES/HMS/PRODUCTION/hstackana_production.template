Run #{gen_run_number}

**************************
* General Run Information
**************************

1 MhZ Pulses : {H.1Mhz.scaler}
Run Length   : {H.1Mhz.scalerTime:%.3f} sec

***********
* Beamline
***********
  
BCM1 Current:	{H.BCM1.scalerCurrent:%.3f} uA		  
BCM2 Current: 	{H.BCM2.scalerCurrent:%.3f} uA		 
Unser Current: 	{H.Unser.scalerCurrent:%.3f} uA		  

With no cuts on BCM{gBCM_Current_threshold_index+1}.
BCM1 Counts: 	{H.BCM1.scaler}		Total Charge: {H.BCM1.scalerCharge:%.3f} uC
BCM2 Counts: 	{H.BCM2.scaler}	     	Total Charge: {H.BCM2.scalerCharge:%.3f} uC	
Unser Counts: 	{H.Unser.scaler}     	     	Total Charge: {H.Unser.scalerCharge:%.3f} uC

Cut on BCM{gBCM_Current_threshold_index+1} current of {gBCM_Current_threshold} uA. Beam over threshold for {H.1Mhz.scalerTimeCut:%.3f}s, or {((H.1Mhz.scalerTimeCut/H.1Mhz.scalerTime)*100.):%.3f}% of total run time.
BCM1 Counts: 	{H.BCM1.scalerCut}		Total Charge: {H.BCM1.scalerChargeCut:%.3f} uC
BCM2 Counts: 	{H.BCM2.scalerCut}		Total Charge: {H.BCM2.scalerChargeCut:%.3f} uC
Unser Counts: 	{H.Unser.scalerCut}		Total Charge: {H.Unser.scalerChargeCut:%.3f} uC

{hdc_plane_names}
Horizontal drift chamber z positions:
Chamber 1: {hdc_zpos[0]:%6.2f} {hdc_zpos[1]:%6.2f} {hdc_zpos[2]:%6.2f} 
           {hdc_zpos[3]:%6.2f} {hdc_zpos[4]:%6.2f} {hdc_zpos[5]:%6.2f} 
Chamber 2: {hdc_zpos[6]:%6.2f} {hdc_zpos[7]:%6.2f} {hdc_zpos[8]:%6.2f} 
           {hdc_zpos[9]:%6.2f} {hdc_zpos[10]:%6.2f} {hdc_zpos[11]:%6.2f}

Rate  :  {H.Trig.scalerRate/1000.:%7.3f} kHz
Live Time : {(hms_trigs.npassed / H.Trig.scaler)*100.0:%3.2f} %
Dead Time : {100.0 - (hms_trigs.npassed / H.Trig.scaler)*100.0:%3.2f} %

hmsDC1Planes_large  Counts:{hmsDC1Planes_large.npassed} /hms_trigs : {hmsDC1Planes_large.npassed/hms_trigs.npassed}
hmsDC2Planes_large  Counts:{hmsDC2Planes_large.npassed}  /hms_trigs : {hmsDC2Planes_large.npassed/hms_trigs.npassed}  

hmsDC1Planes6       Counts:  {hmsDC1Planes6hits.npassed} /hms_trigs : {hmsDC1Planes6hits.npassed/hms_trigs.npassed}
hmsDC2Planes6  	    Counts:  {hmsDC2Planes6hits.npassed} /hms_trigs : {hmsDC2Planes6hits.npassed/hms_trigs.npassed}  

hmsDC1x1Planes5	    Counts:  {hmsDC1_5hits_x1.npassed} eff : {hmsDC1_6hits_x1.npassed/hmsDC1_5hits_x1.npassed}
hmsDC1u1Planes5	    Counts:  {hmsDC1_5hits_u1.npassed} eff : {hmsDC1_6hits_u1.npassed/hmsDC1_5hits_u1.npassed}
hmsDC1u2Planes5	    Counts:  {hmsDC1_5hits_u2.npassed} eff : {hmsDC1_6hits_u2.npassed/hmsDC1_5hits_u2.npassed}
hmsDC1v1Planes5	    Counts:  {hmsDC1_5hits_v1.npassed} eff : {hmsDC1_6hits_v1.npassed/hmsDC1_5hits_v1.npassed}
hmsDC1v2Planes5	    Counts:  {hmsDC1_5hits_v2.npassed} eff : {hmsDC1_6hits_v2.npassed/hmsDC1_5hits_v2.npassed}
hmsDC1x2Planes5	    Counts:  {hmsDC1_5hits_x2.npassed} eff : {hmsDC1_6hits_x2.npassed/hmsDC1_5hits_x2.npassed}

hmsDC2x1Planes5	    Counts:  {hmsDC2_5hits_x1.npassed} eff : {hmsDC2_6hits_x1.npassed/hmsDC2_5hits_x1.npassed}
hmsDC2u1Planes5	    Counts:  {hmsDC2_5hits_u1.npassed} eff : {hmsDC2_6hits_u1.npassed/hmsDC2_5hits_u1.npassed}
hmsDC2u2Planes5	    Counts:  {hmsDC2_5hits_u2.npassed} eff : {hmsDC2_6hits_u2.npassed/hmsDC2_5hits_u2.npassed}
hmsDC2v1Planes5	    Counts:  {hmsDC2_5hits_v1.npassed} eff : {hmsDC2_6hits_v1.npassed/hmsDC2_5hits_v1.npassed}
hmsDC2v2Planes5	    Counts:  {hmsDC2_5hits_v2.npassed} eff : {hmsDC2_6hits_v2.npassed/hmsDC2_5hits_v2.npassed}
hmsDC2x2Planes5	    Counts:  {hmsDC2_5hits_x2.npassed} eff : {hmsDC2_6hits_x2.npassed/hmsDC2_5hits_x2.npassed}

*****************************
*HMS TRACKING EFFICIENCIES *
*****************************
htrig                          :   {hms_trigs.npassed}
hhitslt = passed hits/cham     :   {hmsHitsLt.npassed}
hhitsplanes = +planes >= 5/6   :   {hmsHitsPlanes.npassed}
hhitsplanessps = + sps         :   {hSpacePoints.npassed}
hhitsplanesspsstubs +stub      :   {hSpacePointsStub.npassed}
hsfoundtrack                   :   {hFoundTrack.npassed}
hscleantrack                   :   {hCleanTrack.npassed}
hstublt = passed stub tests    :   {hStubLT.npassed}
h1hitslt                       :   {hms1HitsLt.npassed}
h2hitslt                       :   {hms2HitsLt.npassed}
h1planesgt                     :   {hmsDC1PlanesGT.npassed}
h2planesgt                     :   {hmsDC2PlanesGT.npassed}
hplanesgt = gt 5 planes/cham   :   {hmsPlanesGT.npassed}
f1hspacepoints                 :   {f1HSpacePoints.npassed}
f2hspacepoints                 :   {f2HSpacePoints.npassed}
htest1=p hits/planes, f sp     :   {hTest1.npassed}
htest2=p sp, f stubs           :   {hTest2.npassed}
hdid                           :   {HMSScinDid.npassed}
hdide                          :   {HMSScinDide.npassed}
hdidh                          :   {HMSScinDidh.npassed}
hscinshould                    :   {HMSScinShould.npassed}
hscinshoulde                   :   {HMSScinShoulde.npassed}
hscinshouldh                   :   {HMSScinShouldh.npassed}
SING FID TRACK EFFIC           : {HMSScinDid.npassed/(HMSScinShould.npassed+0.0001):%8.4f} +- {(sqrt(HMSScinShould.npassed-HMSScinDid.npassed)/(HMSScinShould.npassed+.0001)):%8.4f}
E SING FID TRACK EFFIC         : {HMSScinDide.npassed/(HMSScinShoulde.npassed+0.0001):%8.4f} +- {(sqrt(HMSScinShoulde.npassed-HMSScinDide.npassed)/(HMSScinShoulde.npassed+.0001)):%8.4f}
HADRON SING FID TRACK EFFIC    : {HMSScinDidh.npassed/(HMSScinShouldh.npassed+0.0001):%8.4f} +- {(sqrt(HMSScinShouldh.npassed-HMSScinDidh.npassed)/(HMSScinShouldh.npassed+.0001)):%8.4f}


*******************
* Hardware Scalers
*******************

*HODOSCOPES*
Scint	Counts		Rate
H1X1+:  {H.hod.1x1.posScaler:%8d}  [ {H.hod.1x1.posScalerRate:%7.1f} ]
H1X2+:  {H.hod.1x2.posScaler:%8d}  [ {H.hod.1x2.posScalerRate:%7.1f} ]
H1X3+:  {H.hod.1x3.posScaler:%8d}  [ {H.hod.1x3.posScalerRate:%7.1f} ]
H1X4+:  {H.hod.1x4.posScaler:%8d}  [ {H.hod.1x4.posScalerRate:%7.1f} ]
H1X5+:  {H.hod.1x5.posScaler:%8d}  [ {H.hod.1x5.posScalerRate:%7.1f} ]
H1X6+:  {H.hod.1x6.posScaler:%8d}  [ {H.hod.1x6.posScalerRate:%7.1f} ]
H1X7+:  {H.hod.1x7.posScaler:%8d}  [ {H.hod.1x7.posScalerRate:%7.1f} ]
H1X8+:  {H.hod.1x8.posScaler:%8d}  [ {H.hod.1x8.posScalerRate:%7.1f} ]
H1X9+:  {H.hod.1x9.posScaler:%8d}  [ {H.hod.1x9.posScalerRate:%7.1f} ]
H1X10+: {H.hod.1x10.posScaler:%8d}  [ {H.hod.1x10.posScalerRate:%7.1f} ]
H1X11+: {H.hod.1x11.posScaler:%8d}  [ {H.hod.1x11.posScalerRate:%7.1f} ] 
H1X12+: {H.hod.1x12.posScaler:%8d}  [ {H.hod.1x12.posScalerRate:%7.1f} ]
H1X13+: {H.hod.1x13.posScaler:%8d}  [ {H.hod.1x13.posScalerRate:%7.1f} ]
H1X14+: {H.hod.1x14.posScaler:%8d}  [ {H.hod.1x14.posScalerRate:%7.1f} ] 
H1X15+: {H.hod.1x15.posScaler:%8d}  [ {H.hod.1x15.posScalerRate:%7.1f} ]
H1X16+: {H.hod.1x16.posScaler:%8d}  [ {H.hod.1x16.posScalerRate:%7.1f} ]

H1X1-:  {H.hod.1x1.negScaler:%8d}  [ {H.hod.1x1.negScalerRate:%7.1f} ]
H1X2-:  {H.hod.1x2.negScaler:%8d}  [ {H.hod.1x2.negScalerRate:%7.1f} ]
H1X3-:  {H.hod.1x3.negScaler:%8d}  [ {H.hod.1x3.negScalerRate:%7.1f} ]
H1X4-:  {H.hod.1x4.negScaler:%8d}  [ {H.hod.1x4.negScalerRate:%7.1f} ]
H1X5-:  {H.hod.1x5.negScaler:%8d}  [ {H.hod.1x5.negScalerRate:%7.1f} ]
H1X6-:  {H.hod.1x6.negScaler:%8d}  [ {H.hod.1x6.negScalerRate:%7.1f} ]
H1X7-:  {H.hod.1x7.negScaler:%8d}  [ {H.hod.1x7.negScalerRate:%7.1f} ]
H1X8-:  {H.hod.1x8.negScaler:%8d}  [ {H.hod.1x8.negScalerRate:%7.1f} ]
H1X9-:  {H.hod.1x9.negScaler:%8d}  [ {H.hod.1x9.negScalerRate:%7.1f} ]
H1X10-: {H.hod.1x10.negScaler:%8d}  [ {H.hod.1x10.negScalerRate:%7.1f} ]
H1X11-: {H.hod.1x11.negScaler:%8d}  [ {H.hod.1x11.negScalerRate:%7.1f} ]
H1X12-: {H.hod.1x12.negScaler:%8d}  [ {H.hod.1x12.negScalerRate:%7.1f} ]
H1X13-: {H.hod.1x13.negScaler:%8d}  [ {H.hod.1x13.negScalerRate:%7.1f} ]
H1X14-: {H.hod.1x14.negScaler:%8d}  [ {H.hod.1x14.negScalerRate:%7.1f} ] 
H1X15-: {H.hod.1x15.negScaler:%8d}  [ {H.hod.1x15.negScalerRate:%7.1f} ]
H1X16-: {H.hod.1x16.negScaler:%8d}  [ {H.hod.1x16.negScalerRate:%7.1f} ]

H1Y1+:  {H.hod.1y1.posScaler:%8d}  [ {H.hod.1y1.posScalerRate:%7.1f} ]
H1Y2+:  {H.hod.1y2.posScaler:%8d}  [ {H.hod.1y2.posScalerRate:%7.1f} ]
H1Y3+:  {H.hod.1y3.posScaler:%8d}  [ {H.hod.1y3.posScalerRate:%7.1f} ]
H1Y4+:  {H.hod.1y4.posScaler:%8d}  [ {H.hod.1y4.posScalerRate:%7.1f} ]
H1Y5+:  {H.hod.1y5.posScaler:%8d}  [ {H.hod.1y5.posScalerRate:%7.1f} ]
H1Y6+:  {H.hod.1y6.posScaler:%8d}  [ {H.hod.1y6.posScalerRate:%7.1f} ]
H1Y7+:  {H.hod.1y7.posScaler:%8d}  [ {H.hod.1y7.posScalerRate:%7.1f} ]
H1Y8+:  {H.hod.1y8.posScaler:%8d}  [ {H.hod.1y8.posScalerRate:%7.1f} ]
H1Y9+:  {H.hod.1y9.posScaler:%8d}  [ {H.hod.1y9.posScalerRate:%7.1f} ]
H1Y10+: {H.hod.1y10.posScaler:%8d}  [ {H.hod.1y10.posScalerRate:%7.1f} ]

H1Y1-:  {H.hod.1y1.negScaler:%8d}  [ {H.hod.1y1.negScalerRate:%7.1f} ]
H1Y2-:  {H.hod.1y2.negScaler:%8d}  [ {H.hod.1y2.negScalerRate:%7.1f} ]
H1Y3-:  {H.hod.1y3.negScaler:%8d}  [ {H.hod.1y3.negScalerRate:%7.1f} ]
H1Y4-:  {H.hod.1y4.negScaler:%8d}  [ {H.hod.1y4.negScalerRate:%7.1f} ]
H1Y5-:  {H.hod.1y5.negScaler:%8d}  [ {H.hod.1y5.negScalerRate:%7.1f} ]
H1Y6-:  {H.hod.1y6.negScaler:%8d}  [ {H.hod.1y6.negScalerRate:%7.1f} ]
H1Y7-:  {H.hod.1y7.negScaler:%8d}  [ {H.hod.1y7.negScalerRate:%7.1f} ]
H1Y8-:  {H.hod.1y8.negScaler:%8d}  [ {H.hod.1y8.negScalerRate:%7.1f} ]
H1Y9-:  {H.hod.1y9.negScaler:%8d}  [ {H.hod.1y9.negScalerRate:%7.1f} ]
H1Y10-: {H.hod.1y10.negScaler:%8d}  [ {H.hod.1y10.negScalerRate:%7.1f} ]

H2X1+:  {H.hod.2x1.posScaler:%8d}  [ {H.hod.2x1.posScalerRate:%7.1f} ]
H2X2+:  {H.hod.2x2.posScaler:%8d}  [ {H.hod.2x2.posScalerRate:%7.1f} ]
H2X3+:  {H.hod.2x3.posScaler:%8d}  [ {H.hod.2x3.posScalerRate:%7.1f} ]
H2X4+:  {H.hod.2x4.posScaler:%8d}  [ {H.hod.2x4.posScalerRate:%7.1f} ]
H2X5+:  {H.hod.2x5.posScaler:%8d}  [ {H.hod.2x5.posScalerRate:%7.1f} ]
H2X6+:  {H.hod.2x6.posScaler:%8d}  [ {H.hod.2x6.posScalerRate:%7.1f} ]
H2X7+:  {H.hod.2x7.posScaler:%8d}  [ {H.hod.2x7.posScalerRate:%7.1f} ]
H2X8+:  {H.hod.2x8.posScaler:%8d}  [ {H.hod.2x8.posScalerRate:%7.1f} ]
H2X9+:  {H.hod.2x9.posScaler:%8d}  [ {H.hod.2x9.posScalerRate:%7.1f} ]
H2X10+: {H.hod.2x10.posScaler:%8d}  [ {H.hod.2x10.posScalerRate:%7.1f} ]
H2X11+: {H.hod.2x11.posScaler:%8d}  [ {H.hod.2x11.posScalerRate:%7.1f} ]
H2X12+: {H.hod.2x12.posScaler:%8d}  [ {H.hod.2x12.posScalerRate:%7.1f} ]
H2X13+: {H.hod.2x13.posScaler:%8d}  [ {H.hod.2x13.posScalerRate:%7.1f} ]
H2X14+: {H.hod.2x14.posScaler:%8d}  [ {H.hod.2x14.posScalerRate:%7.1f} ]
H2X15+: {H.hod.2x15.posScaler:%8d}  [ {H.hod.2x15.posScalerRate:%7.1f} ]
H2X16+: {H.hod.2x16.posScaler:%8d}  [ {H.hod.2x16.posScalerRate:%7.1f} ]

H2X1-:  {H.hod.2x1.negScaler:%8d}  [ {H.hod.2x1.negScalerRate:%7.1f} ]
H2X2-:  {H.hod.2x2.negScaler:%8d}  [ {H.hod.2x2.negScalerRate:%7.1f} ]
H2X3-:  {H.hod.2x3.negScaler:%8d}  [ {H.hod.2x3.negScalerRate:%7.1f} ]
H2X4-:  {H.hod.2x4.negScaler:%8d}  [ {H.hod.2x4.negScalerRate:%7.1f} ]
H2X5-:  {H.hod.2x5.negScaler:%8d}  [ {H.hod.2x5.negScalerRate:%7.1f} ]
H2X6-:  {H.hod.2x6.negScaler:%8d}  [ {H.hod.2x6.negScalerRate:%7.1f} ]
H2X7-:  {H.hod.2x7.negScaler:%8d}  [ {H.hod.2x7.negScalerRate:%7.1f} ]
H2X8-:  {H.hod.2x8.negScaler:%8d}  [ {H.hod.2x8.negScalerRate:%7.1f} ]
H2X9-:  {H.hod.2x9.negScaler:%8d}  [ {H.hod.2x9.negScalerRate:%7.1f} ]
H2X10-: {H.hod.2x10.negScaler:%8d}  [ {H.hod.2x10.negScalerRate:%7.1f} ]
H2X11-: {H.hod.2x11.negScaler:%8d}  [ {H.hod.2x11.negScalerRate:%7.1f} ]
H2X12-: {H.hod.2x12.negScaler:%8d}  [ {H.hod.2x12.negScalerRate:%7.1f} ]
H2X13-: {H.hod.2x13.negScaler:%8d}  [ {H.hod.2x13.negScalerRate:%7.1f} ]
H2X14-: {H.hod.2x14.negScaler:%8d}  [ {H.hod.2x14.negScalerRate:%7.1f} ]
H2X15-: {H.hod.2x15.negScaler:%8d}  [ {H.hod.2x15.negScalerRate:%7.1f} ]
H2X16-: {H.hod.2x16.negScaler:%8d}  [ {H.hod.2x16.negScalerRate:%7.1f} ]

H2Y1+:  {H.hod.2y1.posScaler:%8d}  [ {H.hod.2y1.posScalerRate:%7.1f} ]
H2Y2+:  {H.hod.2y2.posScaler:%8d}  [ {H.hod.2y2.posScalerRate:%7.1f} ]
H2Y3+:  {H.hod.2y3.posScaler:%8d}  [ {H.hod.2y3.posScalerRate:%7.1f} ] 
H2Y4+:  {H.hod.2y4.posScaler:%8d}  [ {H.hod.2y4.posScalerRate:%7.1f} ]
H2Y5+:  {H.hod.2y5.posScaler:%8d}  [ {H.hod.2y5.posScalerRate:%7.1f} ]
H2Y6+:  {H.hod.2y6.posScaler:%8d}  [ {H.hod.2y6.posScalerRate:%7.1f} ]
H2Y7+:  {H.hod.2y7.posScaler:%8d}  [ {H.hod.2y7.posScalerRate:%7.1f} ]
H2Y8+:  {H.hod.2y8.posScaler:%8d}  [ {H.hod.2y8.posScalerRate:%7.1f} ]
H2Y9+:  {H.hod.2y9.posScaler:%8d}  [ {H.hod.2y9.posScalerRate:%7.1f} ]
H2Y10+: {H.hod.2y10.posScaler:%8d}  [ {H.hod.2y10.posScalerRate:%7.1f} ]

H2Y1-:  {H.hod.2y1.negScaler:%8d}  [ {H.hod.2y1.negScalerRate:%7.1f} ]
H2Y2-:  {H.hod.2y2.negScaler:%8d}  [ {H.hod.2y2.negScalerRate:%7.1f} ]
H2Y3-:  {H.hod.2y3.negScaler:%8d}  [ {H.hod.2y3.negScalerRate:%7.1f} ]
H2Y4-:  {H.hod.2y4.negScaler:%8d}  [ {H.hod.2y4.negScalerRate:%7.1f} ]
H2Y5-:  {H.hod.2y5.negScaler:%8d}  [ {H.hod.2y5.negScalerRate:%7.1f} ]
H2Y6-:  {H.hod.2y6.negScaler:%8d}  [ {H.hod.2y6.negScalerRate:%7.1f} ]
H2Y7-:  {H.hod.2y7.negScaler:%8d}  [ {H.hod.2y7.negScalerRate:%7.1f} ]
H2Y8-:  {H.hod.2y8.negScaler:%8d}  [ {H.hod.2y8.negScalerRate:%7.1f} ]
H2Y9-:  {H.hod.2y9.negScaler:%8d}  [ {H.hod.2y9.negScalerRate:%7.1f} ]
H2Y10-: {H.hod.2y10.negScaler:%8d}  [ {H.hod.2y10.negScalerRate:%7.1f} ]

H1X:	{H.S1X.scaler:%8d} [ {H.S1X.scalerRate:%7.1f} ] AND between + and - sides of H1X 
H1Y: 	{H.S1Y.scaler:%8d} [ {H.S1Y.scalerRate:%7.1f} ] AND between + and - sides of H1Y
H2X: 	{H.S2X.scaler:%8d} [ {H.S2X.scalerRate:%7.1f} ] AND between + and - sides of H2X
H2Y: 	{H.S2Y.scaler:%8d} [ {H.S2Y.scalerRate:%7.1f} ] AND between + and - sides of H2Y
H1XH1Y: {H.S1XS1Y.scaler:%8d} [{H.S1XS1Y.scalerRate:%7.1f}] AND between H1X and H1Y planes 
H2XH2Y: {H.S2XS2Y.scaler:%8d} [{H.S2XS2Y.scalerRate:%7.1f}] AND between H2X and H2Y planes                                                

*Cerenkov*
CERSUM:	     {H.CERSUM.scaler:%8d}  [{H.CERSUM.scalerRate:%8d}]

*Calorimeter*
PRESHOWERLO: {H.PSHWRLO.scaler:%8d}  [{H.PSHWRLO.scalerRate:%8d}]
PRESHOWERHI: {H.PSHWRHI.scaler:%8d}  [{H.PSHWRHI.scalerRate:%8d}]
SHWR: 	     {H.SHWR.scaler:%8d} [{H.SHWR.scalerRate:%8d}]
ASUM: 	     {H.ASUM.scaler:%8d}  [{H.ASUM.scalerRate:%8d}]
BSUM:	     {H.BSUM.scaler:%8d}  [{H.BSUM.scalerRate:%8d}]
CSUM:	     {H.CSUM.scaler:%8d}  [{H.CSUM.scalerRate:%8d}]
DSUM:	     {H.DSUM.scaler:%8d}  [{H.DSUM.scalerRate:%8d}]


**********************************************************************************************************************************
**DRIFTCHAMBER**
I'm pretty sure that these are the "raw" number of counts. "Raw" means one or more hits per dc plane.
hmsDC1_1hit_x1:      {hmsDC1_1hit_x1.npassed} 		
hmsDC1_1hit_u1:      {hmsDC1_1hit_u1.npassed}		
hmsDC1_1hit_u2:      {hmsDC1_1hit_u2.npassed}		
hmsDC1_1hit_v1:      {hmsDC1_1hit_v1.npassed}		
hmsDC1_1hit_u2:      {hmsDC1_1hit_u2.npassed}		
hmsDC1_1hit_x2:      {hmsDC1_1hit_x2.npassed}		

hmsDC2_1hit_x1:      {hmsDC2_1hit_x1.npassed}		
hmsDC2_1hit_u1:      {hmsDC2_1hit_u1.npassed}		
hmsDC2_1hit_u2:      {hmsDC2_1hit_u2.npassed}		
hmsDC2_1hit_v1:      {hmsDC2_1hit_v1.npassed}		
hmsDC2_1hit_u2:      {hmsDC2_1hit_u2.npassed}		
hmsDC2_1hit_x2:      {hmsDC2_1hit_x2.npassed}		

"Good" means one or two hits per dc plane.
goodHDC1x1:	     {goodHDC1x1.npassed}	eff : {goodHDC1x1.npassed/(hms_trigs.npassed+.0001):%5.3f}
goodHDC1u2:	     {goodHDC1u2.npassed}	eff : {goodHDC1u2.npassed/(hms_trigs.npassed+.0001):%5.3f}
goodHDC1u1:          {goodHDC1u1.npassed}	eff : {goodHDC1u1.npassed/(hms_trigs.npassed+.0001):%5.3f}
goodHDC1v1:	     {goodHDC1v1.npassed}	eff : {goodHDC1v1.npassed/(hms_trigs.npassed+.0001):%5.3f}
goodHDC1v2:	     {goodHDC1v2.npassed}	eff : {goodHDC1v2.npassed/(hms_trigs.npassed+.0001):%5.3f}
goodHDC1x2:	     {goodHDC1x2.npassed}	eff : {goodHDC1x2.npassed/(hms_trigs.npassed+.0001):%5.3f}

goodHDC2x1:	     {goodHDC2x1.npassed}	eff : {goodHDC2x1.npassed/(hms_trigs.npassed+.0001):%5.3f}
goodHDC2u2:	     {goodHDC2u2.npassed}	eff : {goodHDC2u2.npassed/(hms_trigs.npassed+.0001):%5.3f}
goodHDC2u1:	     {goodHDC2u1.npassed}	eff : {goodHDC2u1.npassed/(hms_trigs.npassed+.0001):%5.3f}
goodHDC2v1:	     {goodHDC2v1.npassed}	eff : {goodHDC2v1.npassed/(hms_trigs.npassed+.0001):%5.3f}
goodHDC2v2:	     {goodHDC2v2.npassed}	eff : {goodHDC2v2.npassed/(hms_trigs.npassed+.0001):%5.3f}
goodHDC2x2:	     {goodHDC2x2.npassed}	eff : {goodHDC2x2.npassed/(hms_trigs.npassed+.0001):%5.3f}

goodHDC1:	     {goodHDC1.npassed}	eff : {goodHDC1.npassed/(hms_trigs.npassed+.0001):%5.3f}
goodHDC2:	     {goodHDC2.npassed}	eff : {goodHDC2.npassed/(hms_trigs.npassed+.0001):%5.3f}
bothgood:	     {bothGood.npassed}	eff : {bothGood.npassed/(hms_trigs.npassed+.0001):%5.3f}

realhdc1x1:	     {realhdc1x1.npassed}
realhdc1u2:	     {realhdc1u2.npassed}
realhdc1u1:          {realhdc1u1.npassed}
realhdc1v1:	     {realhdc1v1.npassed}
realhdc1v2:	     {realhdc1v2.npassed}
realhdc1x2:	     {realhdc1x2.npassed}

realhdc2x1:	     {realhdc2x1.npassed}
realhdc2u2:	     {realhdc2u2.npassed}
realhdc2u1:	     {realhdc2u1.npassed}
realhdc2v1:	     {realhdc2v1.npassed}
realhdc2v2:	     {realhdc2v2.npassed}
realhdc2x2:	     {realhdc2x2.npassed}
    	   	       
**HODOSCOPE**
"Any" means one or more hits per scint plane.
anyhs1x:    	     {anyhs1x.npassed}	eff: {anyhs1x.npassed/(hms_trigs.npassed+.0001):%5.3f}	BAD = ??
anyhs1y: 	     {anyhs1y.npassed}	eff: {anyhs1y.npassed/(hms_trigs.npassed+.0001):%5.3f}
anyhs2x:	     {anyhs2x.npassed}	eff: {anyhs2x.npassed/(hms_trigs.npassed+.0001):%5.3f}
anyhs2y: 	     {anyhs2y.npassed}	eff: {anyhs2y.npassed/(hms_trigs.npassed+.0001):%5.3f} 

"Good" means one or two hits per scint plane.
goodhs1x :   	     {goodhs1x.npassed}	 eff: {goodhs1x.npassed/(hms_trigs.npassed+.0001):%5.3f}	BAD = ??
goodhs1y:	     {goodhs1y.npassed}	 eff: {goodhs1y.npassed/(hms_trigs.npassed+.0001):%5.3f}
goodhs1:	     {goodhs1.npassed}	 eff: {goodhs1.npassed/(hms_trigs.npassed+.0001):%5.3f}
goodhs2x:	     {goodhs2x.npassed}	 eff: {goodhs2x.npassed/(hms_trigs.npassed+.0001):%5.3f}
goodhs2y:	     {goodhs2y.npassed}	 eff: {goodhs2y.npassed/(hms_trigs.npassed+.0001):%5.3f}
goodhs2:	     {goodhs2.npassed}	 eff: {goodhs2.npassed/(hms_trigs.npassed+.0001):%5.3f}
goodhs1s2: 	     {goodhs1s2.npassed}       eff: {goodhs1s2.npassed/(hms_trigs.npassed+.0001):%5.3f}

hFoundTrack:	     {hFoundTrack.npassed}	 eff: {hFoundTrack.npassed/(hms_trigs.npassed+.0001):%5.3f}	BAD = ??
hFound1Track:	     {hFound1Track.npassed}	 eff: {hFound1Track.npassed/(hms_trigs.npassed+.0001):%5.3f} 
hFound2Track:	     {hFound2Track.npassed}	 eff: {hFound2Track.npassed/(hms_trigs.npassed+.0001):%5.3f} 
hFound3Track:	     {hFound3Track.npassed}	 eff: {hFound3Track.npassed/(hms_trigs.npassed+.0001):%5.3f} 
hFound4Track:	     {hFound4Track.npassed}	 eff: {hFound4Track.npassed/(hms_trigs.npassed+.0001):%5.3f} 

hCleanTrack:	     {hCleanTrack.npassed}	 eff: {hCleanTrack.npassed/(hms_trigs.npassed+.0001):%5.3f}	 BAD = ??
1hCleanTrack:	     {1hCleanTrack.npassed}	 eff: {1hCleanTrack.npassed/(hms_trigs.npassed+.0001):%5.3f} 
2hCleanTrack:	     {2hCleanTrack.npassed}	 eff: {2hCleanTrack.npassed/(hms_trigs.npassed+.0001):%5.3f}
3hCleanTrack:	     {3hCleanTrack.npassed}	 eff: {3hCleanTrack.npassed/(hms_trigs.npassed+.0001):%5.3f}
4hCleanTrack:	     {4hCleanTrack.npassed}	 eff: {4hCleanTrack.npassed/(hms_trigs.npassed+.0001):%5.3f}

**CHERENKOVS AND CAL**
cer_pmt1_elec:	     {cer_pmt1_elec.npassed}
cer_pmt2_elect:	     {cer_pmt2_elec.npassed}
cer_elec:	     {cer_elec.npassed}
cer_pi:		     {cer_pi.npassed}


************
* HGC Cerenkov *
************

Good Track Requirements:
   1. Only one track found in the focal plane
   2. chisq/dof < {hcer_red_chi2_max:%5.1f}
   3. {hcer_beta_min:%5.3f} < beta < {hcer_beta_max:%5.3f}
   4. {hcer_enorm_min:%5.3f} < calorimeter energy < {hcer_enorm_max:%5.3f}
Threshold set at {hcer_npe_thresh:%4.1f}
*HGC EFF* 2PMTs
HMS Region 1 efficiency: {HMS_hcer_track_fired_region_1.npassed/HMS_hcer_track_matched_region_1.npassed} = {HMS_hcer_track_fired_region_1.npassed} of {HMS_hcer_track_matched_region_1.npassed} good tracks.
HMS Region 2 efficiency: {HMS_hcer_track_fired_region_2.npassed/HMS_hcer_track_matched_region_2.npassed} = {HMS_hcer_track_fired_region_2.npassed} of {HMS_hcer_track_matched_region_2.npassed} good tracks.
Overall HGC Efficiency: {HMS_hcer_track_fired_tot.npassed/HMS_hcer_track_matched_tot.npassed} = {HMS_hcer_track_fired_tot.npassed} of {HMS_hcer_track_matched_tot.npassed} good tracks.

****************************
* Calorimeter Efficiencies *
****************************
Efficiencies for calorimeter is the fraction of times block was hit when track
with chisquared/dof < {hstat_cal_maxchisq:%5.1f} came within {hstat_cal_slop:%4.1f} cm of the center.
and scal_npe_sum  > 3.0 (hardwired). (is this still true?)

Events examined = strig       = {hms_trigs.npassed}
Tracks found    = scleantrack = {hCleanTrack.npassed}
//Tracks passing chisquared cut = {hstat_cal_numevents:%7d} (in previous template, do we need this here?)

hmsPreShower	     Counts: {H.cal.stat_trksum1} eff : {H.cal.stat_hitsum1 / H.cal.stat_trksum1}
hmsShowerArray	     Counts: {H.cal.stat_trksum_array} eff : {H.cal.stat_hitsum_array / H.cal.stat_trksum_array}

**************************
* Hodoscope Efficiencies * 
**************************
Efficiencies for hodoscopes is the fraction of times scin. was hit when track
with chisquared/dof < {hstat_maxchisq:%5.1f} came within {hstat_slop:%4.1f} cm of the center.

Events examined = strig       = {hms_trigs.npassed}
Tracks found    = scleantrack = {hCleanTrack.npassed}
//Tracks passing chisquared cut = {hstat_numevents} (in previous template, do we still need this?)

Hodo efficiency:
Plane 1: {hhodo_plane_AND_eff[0]}
Plane 2: {hhodo_plane_AND_eff[1]}
Plane 3: {hhodo_plane_AND_eff[2]}
Plane 4: {hhodo_plane_AND_eff[3]}

S1XY : {hhodo_s1XY_eff}
S2XY : {hhodo_s2XY_eff}

STOF: {hhodo_stof_eff}

3_of_4 EFF : {hhodo_3_of_4_eff}
4_of_4 EFF : {hhodo_4_of_4_eff}


*HODO EFF* Need to checkout hodoeff module.
Scint		Pos eff		Neg eff		OR eff		AND eff		 Hits
-----------------------------------------------------------------------------------------------------
H1X1+			 
H1X2+
H1X3+	
H1X4+
H1X5+
H1X6+
H1X7+
H1X8+
H1X9+
H1X10+
H1X11+
H1X12+
H1X13+
H1X14+
H1X15+
H1X16+

H1X1-
H1X2-
H1X3-
H1X4-
H1X5-
H1X6-
H1X7-
H1X8-
H1X9-
H1X10-
H1X11-
H1X12-
H1X13-
H1X14-
H1X15-
H1X16-

H1Y1+
H1Y2+
H1Y3+
H1Y4+
H1Y5+
H1Y6+
H1Y7+
H1Y8+
H1Y9+
H1Y10+

H1Y1-
H1Y2-
H1Y3-
H1Y4-
H1Y5-
H1Y6-
H1Y7-
H1Y8-
H1Y9-
H1Y10-

H2X1+
H2X2+
H2X3+
H2X4+
H2X5+
H2X6+
H2X7+
H2X8+
H2X9+
H2X10+
H2X11+
H2X12+
H2X13+
H2X14+
H2X15+
H2X16+

H2X1-
H2X2-
H2X3-
H2X4-
H2X5-
H2X6-
H2X7-
H2X8-
H2X9-
H2X10-
H2X11-
H2X12-
H2X13-
H2X14-
H2X15-
H2X16-

H2Y1+
H2Y2+
H2Y3+
H2Y4+
H2Y5+
H2Y6+
H2Y7+
H2Y8+
H2Y9+
H2Y10+

H2Y1-
H2Y2-
H2Y3-
H2Y4-
H2Y5-
H2Y6-
H2Y7-
H2Y8-
H2Y9-
H2Y10-




